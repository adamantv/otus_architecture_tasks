package game.queue;

import game.actions.Command;
import lombok.AllArgsConstructor;

import java.util.Queue;

@AllArgsConstructor
public class CommandQueue {
    private Queue<Command> queue;
    private ExceptionHandler exceptionHandler;

    /**
     * New command added to the tail of the queue
     *
     * @param command need to add to queue
     */
    public void addCommandToQueue(Command command) {
        queue.add(command);
    }

    /**
     * The next command is taken from the head of the command.
     * If an exception was thrown, the new command generated by the exception handler
     * is added to the tail of the queue
     */
    public void executeQueue() {
        if (queue != null && queue.peek() != null) {
            Command headCommand = queue.peek();
            try {
                headCommand.execute();
                queue.remove();
            } catch (Exception e) {
                Command newCommand = exceptionHandler.handle(headCommand, e);
                queue.remove();
                this.addCommandToQueue(newCommand);
            }
        } else {
            System.out.println("Queue is empty, unable to perform command");
        }
    }

    public Queue<Command> getQueue() {
        return queue;
    }
}
